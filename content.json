{"pages":[],"posts":[{"title":"장대호 회고록에 대하여","text":"우리 사회는 옳게 생각하고 있는가? 회고록의 내용여느 때와 다름없이 새벽 코딩을 하던 도중, 꽤 심심해진 나는 페이스북을 켜 최근 논란이 되고 있는 장대호 본인이 쓴 살인 사건에 대한 경과와 동기, 생각하는 바에 대해 적은 속칭 장대호 회고록에 대해 시간을 들여 읽어보았다. 무려 28페이지에 달하는 회고록은 글 길이에도 불구하고 마치 소설적 진술 구조를 가지고 있어, 굉장히 빠른 시간 내에 읽을 수 있었다.징대호 회고록 전문 내용을 요약하면 범인은 모텔 직원이었던 자신을 모욕한 피해자에게 앙심을 품었고, 이후 잠자고 있던 피해자를 둔기로 살해하였다. 그리고는 처음에는 완전 범조를 계획하고 시체를 한강에 유기하였으나, 이후에는 심리적 압박감과 더불어 어차피 완전 범죄가 되지 못한다면 자신의 (범인의 생각에 의하면)정당함이라도 밝히자는 의도로 자수하였다고 한다.이후에는 우리가 모두 알고 있는 그 내용이다.후반부 내용에 얼론의 보도에 대한 부당함을 주장하는 내용이 있으나, 이에 대한 진위는 알 수 없으므로 넘어가는 것이 좋을 것 같다. 그에 대한 나의 생각그의 회고록에 대한 나의 생각을 간단히 요약하면 다음과 같다. 범인은 범행의 동기를 설득하는 데에는 성공했으나,범행을 정당화하는 것에는 실패했다. 범인은 일인칭 서술의 형태를 취함으로써 범행까지의 과정과 범행 이후의 과정까지에서 자신의 심리 상태를 효과적으로 전달할 수 있었다. 범인은 회고록 내내 서술의 목적으로 범행의 동기 전달과 범행의 정당성 설득(반성하지 않는 이유를 대며)하려 하였다.내 생각에 적어도 한 가지 목적은 달성한 것 같아 보인다. 동기에 대한 설득.물론 그것이 정당성과 이어지지는 않는다. 어떠한 심적 동기에서 그러했는지 알았을 뿐이다. 범인 같은 상황에서 어찌 화가 나지 않을 수 있겠는가? 비슷한 일이 나에게도 있었는지는 모르겠으나, 적어도 범인이 서술한 내용들을 읽으면서 나도 간접적으로나마 그 분노에 공감할 수 있었다. 한 개인의 인간성에 대한 공격이 얼마나 심리적으로 큰 타격을 주는지는 아마 다수가 공감할 수 있을 것이라 생각한다. 다만, 아까부터 계속 언급하듯 그것이 언제나 정당함과 이어지지는 않는다는 것이다. 평범한 사람이라면, 똥이 마렵다고 아무 곳에서 싸지 않으며 마음에 드는 이성이 있다고 해서 그 자리에서 바지를 벗는 일이 없을 것이다. 굳이 이러한 비유를 들지 않더라도, 심적 동기가 충분했다고 해서 혹은 그가 언론과의 인터뷰에서 정종부의 무신정변 사건을 들은 것처럼 역사적 사례가 그 정당성을 보증해주지 않는다. 그는 후회되는 것으로 두 가지를 꼽았다. 하나는 자수로 인해 감형될 것으로 예상하였는데 그러지 않고 오히려 신상공개와 무기징역으로 대갚음받았다며 자수하지 않고 완전 범죄를 기획했다면 어땠을까 하는 것이고, 또 하나는 그를 죽이는 대신 맹인으로 만들거나 앉은뱅이로 만들어 버리는 것이 (보복의 형평성상) 더 나았을까 하는 것이다.그러나 모두 괴변일 뿐이다. 특히 두 번째에 대해서는 정말이지 할 말이 없는 것이 아닌가 싶다. 그의 논리는 옛 함무라비 법전의 눈에는 눈 이에는 이에서 따온 생각이다. 물론 나는 이 논리에도 부정적이지만, 설사 그게 정당하다고 할지라도 그가 당한 신체적 정신적 피해가 상대를 맹인으로 만들거나 앉은뱅이로 만드는 것과 치환될 수 있는지는 의문이다. 게다가 앞서 말했듯이 이 논리의 논거는 이제 막 기록의 시대가 시작되는 메소포타미아 문명 시기(정확히는 흔히 말하는 메소포타미아 문명 시기와는 한참 거리가 있기는 하다)의 비석에 있다.인간사는 항상 하지 말아야 할 것을 정하고 또 옳고 그름에 대한 경험적 데이터를 쌓아 오며 발전해왔다. 그렇게 정립된 것을 우리는 ‘윤리’라고 한다. 과거의 옳고 그름을 현대에 적용하는 것은 미개한 일이다. 마야문명의 인간 공양을, 근대 이전의 노예제를, 고대시대의 잔혹한 형벌을 현시대에 적용한다면 어떻게 말할 것인가? 발전을 거스르는 것은 퇴화이다. 윤리의 퇴화는 옳지 못한 것일 것이다.그런 의미에서 그의 논리는 완전히 틀렸다. 회고록과 사회사실 장대호라는 개인이 쓴 회고록 자체는 크게 문제가 되지 않는다.(물론 굉장히 악독한 글이지만)사실 내가 문제라고 보고 있는 것은 그것을 받아들이는 대중이다. 몇몇 사람들은 그를 옹호하기도 하고 통쾌하다고 하고 있는 실정이다. 과연 이것은 괜찮은 것인가?분명 그의 인터뷰 내용이나, 그의 회고록을 보면 글의 서술 능력은 굉장히 좋은 수준이다. 엄청 대단하다고 할 수는 없어도 적어도 일반적인 사람들보다는 좋은 것은 사실인 것 같다. 그러나 보이는 것은 그저 보이는 것일 뿐이다. 사실 제일 중요한 것은 본질이다. 본질에 의미가 없다면, 겉을 감싸고 있는 것이 무슨 의미가 있겠는가. 아마 대부분은 그의 유려한 혀 솜씨에 넘어간 것 같다.이것이 무엇을 의미하는 것인가? 아마 대중은 정보를 받아들일 때, 본질에는 집중하지 않으며, 본질을 보더라도 이를 정제할 능력이 없는 것을 의미하는 것이라고 생각한다. 그러니 대중은 꾸준히 특정 얘기를 반복적으로 듣다 보면 그 논리에 쏠리게 되고 어느새 그것을 옹호하는 이들로 변하는 속성이 있다는 것이다. 언론의 보도는 이러한 현상을 만들어 내기 쉽다. 그리고 이는 그 자체로 강력한 결과값을 만들어 내므로, 이에 편승해 이익을 취하는 사람들이 존재함은 필연적일 것이다. 내가 본 사건과 현상을 보면서 느끼는 바는 무리, 즉 대중과 그 무리의 집합체인 사회에 대한 실망감이었다. 물론 그의 회고록에 대해 반하는 의견들도 몇몇이 있지만, 대부분은 통쾌하다거나, 의롭다 라고 말하고 있다. 이 사회는 윤리에 대해 그저 따분한 규범 따위로 버려둘 것인가? 그리고 우메함으로 물든 이 공동체는 어떻게 할 것인가?","link":"/2021/01/30/%EC%9E%A5%EB%8C%80%ED%98%B8_%ED%9A%8C%EA%B3%A0%EB%A1%9D/"},{"title":"첫 글","text":"요즘 1일 1커밋을 하며 열심히 프로그래밍 공부를 하고 있다.그런 와중 문득 공부한 것을 기록해야할 필요성을 느끼기 시작했다. 아마 두 가지 이유에서 그러했다고 생각한다.첫째는 내 기억력의 한계이고, 둘째는 요점정리는 항상 가장 좋은 공부법 중 하나이기 때문이다.그래서 기록체계를 무엇을 쓰면 될지 고민해보았다. 보아하니 내 주변에는 꽤나 개발 블로그를 사용하는 사람들이 많았다.굳이 개발 블로그가 아니더라도, 블로그를 하는 사람은 정말 많았다. 그래서 블로그를 해보기로 하였고, 마침 프로그래밍 공부를 하면서 Github를 많이 사용하고 있으니, Github의 Web Hosting기능을 이용해보는 거도 나쁘지 않겠다고 생각하게 되었다.그래서 Hexo라는 정적 웹 사이트 생성 프로그램을 이용해서 Github에 올려보는 것을 해보기로 하였다. Hexo는 원하는 테마, 구성 등을 선택하여 yml파일에 저장하면, 이를 기반으로 정적파일을 생성해준다. 참 편한 세상이다.나같은 StyleSheet고자(미적감각이라고는 정말이지 1도 없는)에게는 정말 갸꿀이 아닌가?그래서 나는 당장 첫 페이지를 만들어 보았다.나름 성공적이고 이쁜거 같기도 하다.아무튼 나는 이곳에 계속 개발공부부터 내 일상얘기 까지해서 글을 올려볼 생각이다.","link":"/2021/01/28/%EC%B2%AB_%EA%B8%80/"},{"title":"git과 버전관리","text":"어쩌다 이런 글을 쓰게 되었는가Git, 개발자라면 누구나 한번쯤 써보았고 계속 쓰게 될 도구이다. 멋쟁이사자처럼에서 처음 코딩을 배웠을 때, 첫 강의가 Git에 대한 것 이었음이 기억난다.그 만큼 Git은 굉장히 코딩하는 데에 있어 중요한 도구 중 하나이다.많은 사람들이 알다시피 Git은 강력한 버전관리 도구이다. 특히 협업에 있어 최고의 효율을 발휘한다.그러나 애석하게도, 제대로 알지 못하고 쓰면 여러문제들로 골머리를 앓는 수가 있다.그 중 가장 흔하게 보는 문제가 충돌(Conflict)에 대한 것이 그것이다.그렇기 때문에 Git을 제대로 씹고 뜯고 맛보고 즐기려면 잘 아는 것이 아주 중요할 것이다.그래, 제대로 알아야 하는건 알겠다. 근데 왜 이런걸 글로 남겨 두는 것이지? 라고 물을 수도 있을 것 같다.사실 원래는 글을 쓸 생각은 없었다. 그냥 혼자 Git 공식문서나 보면서 공부할 생각이었으나, 멋쟁이사자처럼 운영진을 맡게되면서 상황이 조금 달라졌다.나 혼자 알고 끝나는 것이 아니라, 누군가를 가르쳐주어야하는 상황이 된 것이다.그래서 이 참에 제대로 알고 정리해서 남겨두는 것이 좋을 것 같아 이렇게 블로그에 남기려는 것이다.문돌이답게 서론이 길었다. 이제부터 내용 정리에 집중해보겠다. 버전관리(Version Control)Git은 버전관리 도구이다. 그런데 버전관리란 무엇인가?버전관리는 소스코드의 변경점을 기록관리하는 것을 말한다.버전관리에는 크게 세 가지 형태가 있다. 로컬 버전관리(Local Version Control Systems) 중앙집중식 버전관리(Centralized Version Control Systems) 분산 버전 관리(Distributed Version Control Systems) 가 그것이다. 로컬 버전관리(Local Version Control Systems)서버 없이 데이터베이스로 구현하는 버전관리 형태이다.많이 쓰이지는 않지만, RCS(Revision Control System)라는 도구가 로컬 버전관리 도구로 이용되고 있다. 중앙집중식 버전관리(Centralized Version Control Systems)중앙에 버전관리를 위한 장치가 있다. 보통 서버를 두어 이 서버에 최종본을 두게된다.중앙에 최종본이 있으니, 간단한 협업이 가능하다.협업을 하기 위해서는 수정하기 원하는 파일만 로컬에 다운받아 수정한 뒤 업로드 하는 방식을 취한다.Subversion이 이러한 방식을 가지는 프로그램이다.중앙집중식 버전관리는 굉장히 강력한 버전관리 방식인 것 같지만, 큰 약점이 있다.바로 중앙서버에 문제가 생기면 파일 전체에 영향이 갈 수 있고, 또 이렇게 될 경우 장시간 협업할 수 없는 상황이 생긴다는 것이다. 분산 버전 관리(Distributed Version Control Systems)중앙에 서버를 둔다는 점에서 중앙집중식 버전관리와 공통점이 있으나, 파일을 다운받을 때, 전체 파일을 모두 다운받아 작업을 하며, 사용자 모두가 버전이력(히스토라)를 복제하여 가지고 있는다.Git이 취하고 있는 방식이 분산 버전 관리이다.","link":"/2021/02/08/git-1/"}],"tags":[{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"Icarus theme","slug":"Icarus-theme","link":"/tags/Icarus-theme/"},{"name":"blog","slug":"blog","link":"/tags/blog/"},{"name":"chatting","slug":"chatting","link":"/tags/chatting/"},{"name":"social","slug":"social","link":"/tags/social/"},{"name":"Git","slug":"Git","link":"/tags/Git/"},{"name":"GitHub","slug":"GitHub","link":"/tags/GitHub/"},{"name":"Version Control","slug":"Version-Control","link":"/tags/Version-Control/"}],"categories":[{"name":"잡담","slug":"잡담","link":"/categories/%EC%9E%A1%EB%8B%B4/"},{"name":"잡념","slug":"잡담/잡념","link":"/categories/%EC%9E%A1%EB%8B%B4/%EC%9E%A1%EB%85%90/"},{"name":"Git","slug":"Git","link":"/categories/Git/"}]}